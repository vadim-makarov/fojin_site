{"uid":"77035d10e2e50f35","name":"test_case_page[chrome-6-locator5]","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"28c79320443e03def068ec45989e4be6","time":{"start":1670706593921,"stop":1670706596338,"duration":2417},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x560d5d25c2a3 <unknown>\n#1 0x560d5d01af77 <unknown>\n#2 0x560d5d05e0a9 <unknown>\n#3 0x560d5d05c18d <unknown>\n#4 0x560d5d059d88 <unknown>\n#5 0x560d5d058f2d <unknown>\n#6 0x560d5d04cdc5 <unknown>\n#7 0x560d5d077b32 <unknown>\n#8 0x560d5d04c61f <unknown>\n#9 0x560d5d077cfe <unknown>\n#10 0x560d5d08f47c <unknown>\n#11 0x560d5d077903 <unknown>\n#12 0x560d5d04aece <unknown>\n#13 0x560d5d04bfde <unknown>\n#14 0x560d5d2ac63e <unknown>\n#15 0x560d5d2afb79 <unknown>\n#16 0x560d5d29289e <unknown>\n#17 0x560d5d2b0a83 <unknown>\n#18 0x560d5d285505 <unknown>\n#19 0x560d5d2d1ca8 <unknown>\n#20 0x560d5d2d1e36 <unknown>\n#21 0x560d5d2ed333 <unknown>\n#22 0x7f3511538b43 <unknown>","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fc4d233fa10>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2373bbad2e7f50321696f26bf7b70d89\")>\ncase = '6'\nlocator = ('css selector', '.case-container-6 > div:nth-child(1) > div:nth-child(1)')\n\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n>       page.scroll_to_and_click_element(locator)\n\nui_tests/test_cases_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc4d29f3250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d5d2d1e36 \\\\u003Cunknown>\\\\n#21 0x560d5d2ed333 \\\\u003Cunknown>\\\\n#22 0x7f3511538b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x560d5d25c2a3 <unknown>\nE       #1 0x560d5d01af77 <unknown>\nE       #2 0x560d5d05e0a9 <unknown>\nE       #3 0x560d5d05c18d <unknown>\nE       #4 0x560d5d059d88 <unknown>\nE       #5 0x560d5d058f2d <unknown>\nE       #6 0x560d5d04cdc5 <unknown>\nE       #7 0x560d5d077b32 <unknown>\nE       #8 0x560d5d04c61f <unknown>\nE       #9 0x560d5d077cfe <unknown>\nE       #10 0x560d5d08f47c <unknown>\nE       #11 0x560d5d077903 <unknown>\nE       #12 0x560d5d04aece <unknown>\nE       #13 0x560d5d04bfde <unknown>\nE       #14 0x560d5d2ac63e <unknown>\nE       #15 0x560d5d2afb79 <unknown>\nE       #16 0x560d5d29289e <unknown>\nE       #17 0x560d5d2b0a83 <unknown>\nE       #18 0x560d5d285505 <unknown>\nE       #19 0x560d5d2d1ca8 <unknown>\nE       #20 0x560d5d2d1e36 <unknown>\nE       #21 0x560d5d2ed333 <unknown>\nE       #22 0x7f3511538b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670706592957,"stop":1670706593920,"duration":963},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x560d5d25c2a3 <unknown>\n#1 0x560d5d01af77 <unknown>\n#2 0x560d5d05e0a9 <unknown>\n#3 0x560d5d05c18d <unknown>\n#4 0x560d5d059d88 <unknown>\n#5 0x560d5d058f2d <unknown>\n#6 0x560d5d04cdc5 <unknown>\n#7 0x560d5d077b32 <unknown>\n#8 0x560d5d04c61f <unknown>\n#9 0x560d5d077cfe <unknown>\n#10 0x560d5d08f47c <unknown>\n#11 0x560d5d077903 <unknown>\n#12 0x560d5d04aece <unknown>\n#13 0x560d5d04bfde <unknown>\n#14 0x560d5d2ac63e <unknown>\n#15 0x560d5d2afb79 <unknown>\n#16 0x560d5d29289e <unknown>\n#17 0x560d5d2b0a83 <unknown>\n#18 0x560d5d285505 <unknown>\n#19 0x560d5d2d1ca8 <unknown>\n#20 0x560d5d2d1e36 <unknown>\n#21 0x560d5d2ed333 <unknown>\n#22 0x7f3511538b43 <unknown>","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fc4d233fa10>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2373bbad2e7f50321696f26bf7b70d89\")>\ncase = '6'\nlocator = ('css selector', '.case-container-6 > div:nth-child(1) > div:nth-child(1)')\n\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n>       page.scroll_to_and_click_element(locator)\n\nui_tests/test_cases_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc4d29f3250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d5d2d1e36 \\\\u003Cunknown>\\\\n#21 0x560d5d2ed333 \\\\u003Cunknown>\\\\n#22 0x7f3511538b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x560d5d25c2a3 <unknown>\nE       #1 0x560d5d01af77 <unknown>\nE       #2 0x560d5d05e0a9 <unknown>\nE       #3 0x560d5d05c18d <unknown>\nE       #4 0x560d5d059d88 <unknown>\nE       #5 0x560d5d058f2d <unknown>\nE       #6 0x560d5d04cdc5 <unknown>\nE       #7 0x560d5d077b32 <unknown>\nE       #8 0x560d5d04c61f <unknown>\nE       #9 0x560d5d077cfe <unknown>\nE       #10 0x560d5d08f47c <unknown>\nE       #11 0x560d5d077903 <unknown>\nE       #12 0x560d5d04aece <unknown>\nE       #13 0x560d5d04bfde <unknown>\nE       #14 0x560d5d2ac63e <unknown>\nE       #15 0x560d5d2afb79 <unknown>\nE       #16 0x560d5d29289e <unknown>\nE       #17 0x560d5d2b0a83 <unknown>\nE       #18 0x560d5d285505 <unknown>\nE       #19 0x560d5d2d1ca8 <unknown>\nE       #20 0x560d5d2d1e36 <unknown>\nE       #21 0x560d5d2ed333 <unknown>\nE       #22 0x7f3511538b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","steps":[],"attachments":[{"uid":"d9390bd6056bd2e5","name":"stderr","source":"d9390bd6056bd2e5.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670706596367,"stop":1670706596423,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az557-703"},{"name":"thread","value":"3077-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'6'"},{"name":"locator","value":"('css selector', '.case-container-6 > div:nth-child(1) > div:nth-child(1)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2270042466c638d6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55cd41e0d2a3 <unknown>\n#1 0x55cd41bcbf77 <unknown>\n#2 0x55cd41c0f0a9 <unknown>\n#3 0x55cd41c0d18d <unknown>\n#4 0x55cd41c0ad88 <unknown>\n#5 0x55cd41c09f2d <unknown>\n#6 0x55cd41bfddc5 <unknown>\n#7 0x55cd41c28b32 <unknown>\n#8 0x55cd41bfd61f <unknown>\n#9 0x55cd41c28cfe <unknown>\n#10 0x55cd41c4047c <unknown>\n#11 0x55cd41c28903 <unknown>\n#12 0x55cd41bfbece <unknown>\n#13 0x55cd41bfcfde <unknown>\n#14 0x55cd41e5d63e <unknown>\n#15 0x55cd41e60b79 <unknown>\n#16 0x55cd41e4389e <unknown>\n#17 0x55cd41e61a83 <unknown>\n#18 0x55cd41e36505 <unknown>\n#19 0x55cd41e82ca8 <unknown>\n#20 0x55cd41e82e36 <unknown>\n#21 0x55cd41e9e333 <unknown>\n#22 0x7facefef8b43 <unknown>","time":{"start":1670706590424,"stop":1670706592868,"duration":2444}},{"uid":"2a2fa0d08418b6c0","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x556e16ad02a3 <unknown>\n#1 0x556e1688ef77 <unknown>\n#2 0x556e168d20a9 <unknown>\n#3 0x556e168d018d <unknown>\n#4 0x556e168cdd88 <unknown>\n#5 0x556e168ccf2d <unknown>\n#6 0x556e168c0dc5 <unknown>\n#7 0x556e168ebb32 <unknown>\n#8 0x556e168c061f <unknown>\n#9 0x556e168ebcfe <unknown>\n#10 0x556e1690347c <unknown>\n#11 0x556e168eb903 <unknown>\n#12 0x556e168beece <unknown>\n#13 0x556e168bffde <unknown>\n#14 0x556e16b2063e <unknown>\n#15 0x556e16b23b79 <unknown>\n#16 0x556e16b0689e <unknown>\n#17 0x556e16b24a83 <unknown>\n#18 0x556e16af9505 <unknown>\n#19 0x556e16b45ca8 <unknown>\n#20 0x556e16b45e36 <unknown>\n#21 0x556e16b61333 <unknown>\n#22 0x7f1b762cab43 <unknown>","time":{"start":1670706587002,"stop":1670706589440,"duration":2438}},{"uid":"7c06a9a16cb061ac","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5567f00bb2a3 <unknown>\n#1 0x5567efe79f77 <unknown>\n#2 0x5567efebd0a9 <unknown>\n#3 0x5567efebb18d <unknown>\n#4 0x5567efeb8d88 <unknown>\n#5 0x5567efeb7f2d <unknown>\n#6 0x5567efeabdc5 <unknown>\n#7 0x5567efed6b32 <unknown>\n#8 0x5567efeab61f <unknown>\n#9 0x5567efed6cfe <unknown>\n#10 0x5567efeee47c <unknown>\n#11 0x5567efed6903 <unknown>\n#12 0x5567efea9ece <unknown>\n#13 0x5567efeaafde <unknown>\n#14 0x5567f010b63e <unknown>\n#15 0x5567f010eb79 <unknown>\n#16 0x5567f00f189e <unknown>\n#17 0x5567f010fa83 <unknown>\n#18 0x5567f00e4505 <unknown>\n#19 0x5567f0130ca8 <unknown>\n#20 0x5567f0130e36 <unknown>\n#21 0x5567f014c333 <unknown>\n#22 0x7f2a618a7b43 <unknown>","time":{"start":1670706583519,"stop":1670706585963,"duration":2444}},{"uid":"e767ce49ee1c3c61","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55be0fb472a3 <unknown>\n#1 0x55be0f905f77 <unknown>\n#2 0x55be0f9490a9 <unknown>\n#3 0x55be0f94718d <unknown>\n#4 0x55be0f944d88 <unknown>\n#5 0x55be0f943f2d <unknown>\n#6 0x55be0f937dc5 <unknown>\n#7 0x55be0f962b32 <unknown>\n#8 0x55be0f93761f <unknown>\n#9 0x55be0f962cfe <unknown>\n#10 0x55be0f97a47c <unknown>\n#11 0x55be0f962903 <unknown>\n#12 0x55be0f935ece <unknown>\n#13 0x55be0f936fde <unknown>\n#14 0x55be0fb9763e <unknown>\n#15 0x55be0fb9ab79 <unknown>\n#16 0x55be0fb7d89e <unknown>\n#17 0x55be0fb9ba83 <unknown>\n#18 0x55be0fb70505 <unknown>\n#19 0x55be0fbbcca8 <unknown>\n#20 0x55be0fbbce36 <unknown>\n#21 0x55be0fbd8333 <unknown>\n#22 0x7f33310b0b43 <unknown>","time":{"start":1670706580071,"stop":1670706582526,"duration":2455}},{"uid":"3999ab18a60146ad","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5183)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x563d0e91a2a3 <unknown>\n#1 0x563d0e6d8f77 <unknown>\n#2 0x563d0e71c0a9 <unknown>\n#3 0x563d0e71a18d <unknown>\n#4 0x563d0e717d88 <unknown>\n#5 0x563d0e716f2d <unknown>\n#6 0x563d0e70adc5 <unknown>\n#7 0x563d0e735b32 <unknown>\n#8 0x563d0e70a61f <unknown>\n#9 0x563d0e735cfe <unknown>\n#10 0x563d0e74d47c <unknown>\n#11 0x563d0e735903 <unknown>\n#12 0x563d0e708ece <unknown>\n#13 0x563d0e709fde <unknown>\n#14 0x563d0e96a63e <unknown>\n#15 0x563d0e96db79 <unknown>\n#16 0x563d0e95089e <unknown>\n#17 0x563d0e96ea83 <unknown>\n#18 0x563d0e943505 <unknown>\n#19 0x563d0e98fca8 <unknown>\n#20 0x563d0e98fe36 <unknown>\n#21 0x563d0e9ab333 <unknown>\n#22 0x7facdd048b43 <unknown>","time":{"start":1670706575805,"stop":1670706579034,"duration":3229}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":3,"passed":0,"unknown":0,"total":4},"items":[{"uid":"fcf412bf584e32ba","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/fcf412bf584e32ba","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 5188)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55a6bf4142a3 <unknown>\n#1 0x55a6bf1d2f77 <unknown>\n#2 0x55a6bf2160a9 <unknown>\n#3 0x55a6bf21418d <unknown>\n#4 0x55a6bf211d88 <unknown>\n#5 0x55a6bf210f2d <unknown>\n#6 0x55a6bf204dc5 <unknown>\n#7 0x55a6bf22fb32 <unknown>\n#8 0x55a6bf20461f <unknown>\n#9 0x55a6bf22fcfe <unknown>\n#10 0x55a6bf24747c <unknown>\n#11 0x55a6bf22f903 <unknown>\n#12 0x55a6bf202ece <unknown>\n#13 0x55a6bf203fde <unknown>\n#14 0x55a6bf46463e <unknown>\n#15 0x55a6bf467b79 <unknown>\n#16 0x55a6bf44a89e <unknown>\n#17 0x55a6bf468a83 <unknown>\n#18 0x55a6bf43d505 <unknown>\n#19 0x55a6bf489ca8 <unknown>\n#20 0x55a6bf489e36 <unknown>\n#21 0x55a6bf4a5333 <unknown>\n#22 0x7fa59a6e7b43 <unknown>","time":{"start":1670703926002,"stop":1670703929202,"duration":3200}},{"uid":"f5b97b755d80e0f0","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/f5b97b755d80e0f0","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701886542,"stop":1670701894519,"duration":7977}},{"uid":"b7cb2b559d0773fb","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/b7cb2b559d0773fb","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701738105,"stop":1670701745958,"duration":7853}}]},"tags":[]},"source":"77035d10e2e50f35.json","parameterValues":["'chrome'","'6'","('css selector', '.case-container-6 > div:nth-child(1) > div:nth-child(1)')"]}
{"uid":"ada3f8d063f47779","name":"test_case_page[firefox-1-locator0]","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"9bca6a077f4c65f54a967d59d5a81bf8","time":{"start":1670786704757,"stop":1670786711128,"duration":6371},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fc6c2dc1350>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"617724de-9c75-4e42-8213-45bf81f0227b\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fc6c2dc3b10>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670786674380,"stop":1670786690112,"duration":15732},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fc6c2dc1350>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"617724de-9c75-4e42-8213-45bf81f0227b\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fc6c2dc3b10>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","steps":[],"attachments":[{"uid":"cd3f33739c150e77","name":"stderr","source":"cd3f33739c150e77.txt","type":"text/plain","size":422}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670786838848,"stop":1670786839120,"duration":272},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User can see all the cases"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az551-667"},{"name":"thread","value":"3023-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"case","value":"'1'"},{"name":"locator","value":"('css selector', '.case-container-1 > div:nth-child(2)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6309c501eb965d93","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670786698460,"stop":1670786704747,"duration":6287}},{"uid":"187c165ebc007678","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670786690113,"stop":1670786698451,"duration":8338}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":2,"passed":3,"unknown":0,"total":7},"items":[{"uid":"679802946027da9d","reportUrl":"https://vadim-makarov.github.io/fojin_site/43//#testresult/679802946027da9d","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670772009468,"stop":1670772018664,"duration":9196}},{"uid":"1dfeed058ef5990e","reportUrl":"https://vadim-makarov.github.io/fojin_site/42//#testresult/1dfeed058ef5990e","status":"passed","time":{"start":1670770047292,"stop":1670770051056,"duration":3764}},{"uid":"e30f2bc7578b7b32","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/e30f2bc7578b7b32","status":"passed","time":{"start":1670706679133,"stop":1670706681332,"duration":2199}},{"uid":"5a8118385b25fa6a","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/5a8118385b25fa6a","status":"passed","statusDetails":"XPASS the test fails in a window mode","time":{"start":1670703959151,"stop":1670703961787,"duration":2636}},{"uid":"66d9e153499ef028","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/66d9e153499ef028","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701931197,"stop":1670701938802,"duration":7605}},{"uid":"12f92ba21bd1ee64","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/12f92ba21bd1ee64","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701781867,"stop":1670701789414,"duration":7547}}]},"tags":[]},"source":"ada3f8d063f47779.json","parameterValues":["'firefox'","'1'","('css selector', '.case-container-1 > div:nth-child(2)')"]}
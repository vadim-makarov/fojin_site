{"uid":"957a5d7c9d82e00b","name":"User can see all the cases","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"9bca6a077f4c65f54a967d59d5a81bf8","time":{"start":1670787898656,"stop":1670787906790,"duration":8134},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f511899c850>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"fcef9bb3-337b-468f-bfa1-ede286f23808\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see all the cases')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7f51189da1d0>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670787895941,"stop":1670787898656,"duration":2715},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f511899c850>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"fcef9bb3-337b-468f-bfa1-ede286f23808\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see all the cases')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7f51189da1d0>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","steps":[],"attachments":[{"uid":"fa7ed8fef4714890","name":"stderr","source":"fa7ed8fef4714890.txt","type":"text/plain","size":851}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670787906796,"stop":1670787907657,"duration":861},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User can see all the cases"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az178-684"},{"name":"thread","value":"3096-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"case","value":"'1'"},{"name":"locator","value":"('css selector', '.case-container-1 > div:nth-child(2)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e095ab7532be1e17","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670787886898,"stop":1670787894972,"duration":8074}},{"uid":"418edac3999cc9ae","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670787873769,"stop":1670787883322,"duration":9553}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":2,"passed":3,"unknown":0,"total":8},"items":[{"uid":"ada3f8d063f47779","reportUrl":"https://vadim-makarov.github.io/fojin_site/44//#testresult/ada3f8d063f47779","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670786704757,"stop":1670786711128,"duration":6371}},{"uid":"679802946027da9d","reportUrl":"https://vadim-makarov.github.io/fojin_site/43//#testresult/679802946027da9d","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670772009468,"stop":1670772018664,"duration":9196}},{"uid":"1dfeed058ef5990e","reportUrl":"https://vadim-makarov.github.io/fojin_site/42//#testresult/1dfeed058ef5990e","status":"passed","time":{"start":1670770047292,"stop":1670770051056,"duration":3764}},{"uid":"e30f2bc7578b7b32","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/e30f2bc7578b7b32","status":"passed","time":{"start":1670706679133,"stop":1670706681332,"duration":2199}},{"uid":"5a8118385b25fa6a","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/5a8118385b25fa6a","status":"passed","statusDetails":"XPASS the test fails in a window mode","time":{"start":1670703959151,"stop":1670703961787,"duration":2636}},{"uid":"66d9e153499ef028","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/66d9e153499ef028","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701931197,"stop":1670701938802,"duration":7605}},{"uid":"12f92ba21bd1ee64","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/12f92ba21bd1ee64","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701781867,"stop":1670701789414,"duration":7547}}]},"tags":[]},"source":"957a5d7c9d82e00b.json","parameterValues":["'firefox'","'1'","('css selector', '.case-container-1 > div:nth-child(2)')"]}
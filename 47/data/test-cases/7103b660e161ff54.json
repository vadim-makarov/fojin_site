{"uid":"7103b660e161ff54","name":"User can see the 7 case","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"d1176a4fad5962e83d6e05a17e779df3","time":{"start":1670791505754,"stop":1670791513156,"duration":7402},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f1f3ae4ed50>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"00e5c6fc-9508-4eb8-a1f8-b6dce6f533f6\")>\ncase = '7'\nlocator = ('css selector', '.case-container-7 > div:nth-child(1) > div:nth-child(1)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7f1f39930490>\npage_name = '7'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670791502750,"stop":1670791505753,"duration":3003},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_failed_check","time":{"start":1670791502750,"stop":1670791502750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f1f3ae4ed50>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"00e5c6fc-9508-4eb8-a1f8-b6dce6f533f6\")>\ncase = '7'\nlocator = ('css selector', '.case-container-7 > div:nth-child(1) > div:nth-child(1)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7f1f39930490>\npage_name = '7'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","steps":[],"attachments":[{"uid":"79a1a4c71958f4d9","name":"log","source":"79a1a4c71958f4d9.txt","type":"text/plain","size":2237},{"uid":"2aebe81e7aa5566a","name":"stderr","source":"2aebe81e7aa5566a.txt","type":"text/plain","size":262}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670791513160,"stop":1670791513757,"duration":597},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_failed_check::0","time":{"start":1670791513758,"stop":1670791513762,"duration":4},"status":"broken","statusMessage":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=54967): Max retries exceeded with url: /session/00e5c6fc-9508-4eb8-a1f8-b6dce6f533f6/screenshot (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1f3996f4d0>: Failed to establish a new connection: [Errno 111] Connection refused'))\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 916, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/fojin_site/fojin_site/conftest.py\", line 61, in test_failed_check\n    screenshot(driver, request.node.nodeid)\n  File \"/home/runner/work/fojin_site/fojin_site/conftest.py\", line 66, in screenshot\n    allure.attach(browser.get_screenshot_as_png(), name=f\"Screenshot fail_{name}\",\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 965, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 977, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 442, in execute\n    response = self.command_executor.execute(driver_command, params)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py\", line 294, in execute\n    return self._request(command_info[0], url, body=data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py\", line 316, in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/request.py\", line 74, in request\n    return self.request_encode_url(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/request.py\", line 96, in request_encode_url\n    return self.urlopen(method, url, **extra_kw)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/poolmanager.py\", line 376, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n              ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"feature","value":"User can see all the cases"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az405-431"},{"name":"thread","value":"3292-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"case","value":"'7'"},{"name":"locator","value":"('css selector', '.case-container-7 > div:nth-child(1) > div:nth-child(1)')"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7103b660e161ff54.json","parameterValues":["'firefox'","'7'","('css selector', '.case-container-7 > div:nth-child(1) > div:nth-child(1)')"]}
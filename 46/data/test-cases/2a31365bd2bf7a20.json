{"uid":"2a31365bd2bf7a20","name":"User can see the 1 case","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"17e0bdb255abc58c23701d7d32e99f29","time":{"start":1670788519909,"stop":1670788528958,"duration":9049},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fad991e7010>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0934711b563a9fbb797bd4455b5197f\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fad9889fed0>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670788518974,"stop":1670788519908,"duration":934},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fad991e7010>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0934711b563a9fbb797bd4455b5197f\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fad9889fed0>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","steps":[],"attachments":[{"uid":"bc1498fa32be642","name":"stderr","source":"bc1498fa32be642.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670788528962,"stop":1670788529024,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az247-456"},{"name":"thread","value":"3144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'1'"},{"name":"locator","value":"('css selector', '.case-container-1 > div:nth-child(2)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4b31eaf22597d9ef","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670788510283,"stop":1670788518909,"duration":8626}},{"uid":"97f39b3d298cdd6","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670788498515,"stop":1670788509249,"duration":10734}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":9},"items":[{"uid":"51dbef3df65d5341","reportUrl":"https://vadim-makarov.github.io/fojin_site/45//#testresult/51dbef3df65d5341","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670787764636,"stop":1670787772557,"duration":7921}},{"uid":"2a6747674138e53e","reportUrl":"https://vadim-makarov.github.io/fojin_site/44//#testresult/2a6747674138e53e","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670786618011,"stop":1670786624207,"duration":6196}},{"uid":"d0a138ea8ab59131","reportUrl":"https://vadim-makarov.github.io/fojin_site/43//#testresult/d0a138ea8ab59131","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670771866926,"stop":1670771875672,"duration":8746}},{"uid":"afff5655058619d4","reportUrl":"https://vadim-makarov.github.io/fojin_site/42//#testresult/afff5655058619d4","status":"failed","statusDetails":"AssertionError: https://fojin.tech/ru/cases","time":{"start":1670769995841,"stop":1670770003996,"duration":8155}},{"uid":"79f9d29e2a5b795e","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/79f9d29e2a5b795e","status":"failed","statusDetails":"AssertionError: https://fojin.tech/ru/cases","time":{"start":1670706616614,"stop":1670706623584,"duration":6970}},{"uid":"2f974106b883ba1a","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/2f974106b883ba1a","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://fojin.tech/ru/cases","time":{"start":1670703926002,"stop":1670703933751,"duration":7749}},{"uid":"cb98e47263b80635","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/cb98e47263b80635","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701886542,"stop":1670701894521,"duration":7979}},{"uid":"edbb83551661c9cd","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/edbb83551661c9cd","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701738105,"stop":1670701746374,"duration":8269}}]},"tags":[]},"source":"2a31365bd2bf7a20.json","parameterValues":["'chrome'","'1'","('css selector', '.case-container-1 > div:nth-child(2)')"]}
{"uid":"b593686f24d2ae20","name":"User can see the 5 case","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"82107c7577c622fb2dc00d54cc23549b","time":{"start":1670788607468,"stop":1670788619553,"duration":12085},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fad989db990>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"75ab850be84eec5107b74fd90af7dd6a\")>\ncase = '5'\nlocator = ('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fad988e3c50>\npage_name = '5'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670788606579,"stop":1670788607468,"duration":889},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670788619559,"stop":1670788619615,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az247-456"},{"name":"thread","value":"3144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'5'"},{"name":"locator","value":"('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b593686f24d2ae20.json","parameterValues":["'chrome'","'5'","('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')"]}
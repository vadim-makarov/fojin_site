{"uid":"583be2f291ca30c6","name":"test_negative_form_data[chrome-negative_data_case3]","fullName":"ui_tests.test_form_from_main_page.TestMainPageForm#test_negative_form_data","historyId":"d109aa68bf4aec91e6021064bc0a42bf","time":{"start":1670770201608,"stop":1670770207485,"duration":5877},"description":"User is scrolling to the bottom and sends wrong data","descriptionHtml":"<p>User is scrolling to the bottom and sends wrong data</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 9768)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x56447e1f92a3 <unknown>\n#1 0x56447dfb7f77 <unknown>\n#2 0x56447dffb0a9 <unknown>\n#3 0x56447dff918d <unknown>\n#4 0x56447dff6d88 <unknown>\n#5 0x56447dff5f2d <unknown>\n#6 0x56447dfe9dc5 <unknown>\n#7 0x56447e014b32 <unknown>\n#8 0x56447dfe961f <unknown>\n#9 0x56447e014cfe <unknown>\n#10 0x56447e02c47c <unknown>\n#11 0x56447e014903 <unknown>\n#12 0x56447dfe7ece <unknown>\n#13 0x56447dfe8fde <unknown>\n#14 0x56447e24963e <unknown>\n#15 0x56447e24cb79 <unknown>\n#16 0x56447e22f89e <unknown>\n#17 0x56447e24da83 <unknown>\n#18 0x56447e222505 <unknown>\n#19 0x56447e26eca8 <unknown>\n#20 0x56447e26ee36 <unknown>\n#21 0x56447e28a333 <unknown>\n#22 0x7f21446a4b43 <unknown>","statusTrace":"self = <ui_tests.test_form_from_main_page.TestMainPageForm object at 0x7f9b7da0dc10>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2afa669320029701b568cc1ec8f2c8a1\")>\nnegative_data_case = [(('name', 'name'), 'test_user'), (('name', 'email'), 'test@fojin.tech'), (('name', 'phone'), '12345678901'), (('name', 'about'), '     ')]\n\n    @allure.feature(\"User sends incorrect data\")\n    @allure.description('User is scrolling to the bottom and sends wrong data')\n    def test_negative_form_data(self, browser, negative_data_case: list):\n        \"\"\"\n          Test fills the application with incorrect data and checks the answer\n        \"\"\"\n        page = MainPage(browser, self.url)\n        page.open()\n        for data in negative_data_case:\n            page.input_data_to_form(data)\n>       page.scroll_to_and_click_element(FormLocators.SEND_BUTTON)\n\nui_tests/test_form_from_main_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9b7c83f190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56447e26ee36 \\\\u003Cunknown>\\\\n#21 0x56447e28a333 \\\\u003Cunknown>\\\\n#22 0x7f21446a4b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 9768)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x56447e1f92a3 <unknown>\nE       #1 0x56447dfb7f77 <unknown>\nE       #2 0x56447dffb0a9 <unknown>\nE       #3 0x56447dff918d <unknown>\nE       #4 0x56447dff6d88 <unknown>\nE       #5 0x56447dff5f2d <unknown>\nE       #6 0x56447dfe9dc5 <unknown>\nE       #7 0x56447e014b32 <unknown>\nE       #8 0x56447dfe961f <unknown>\nE       #9 0x56447e014cfe <unknown>\nE       #10 0x56447e02c47c <unknown>\nE       #11 0x56447e014903 <unknown>\nE       #12 0x56447dfe7ece <unknown>\nE       #13 0x56447dfe8fde <unknown>\nE       #14 0x56447e24963e <unknown>\nE       #15 0x56447e24cb79 <unknown>\nE       #16 0x56447e22f89e <unknown>\nE       #17 0x56447e24da83 <unknown>\nE       #18 0x56447e222505 <unknown>\nE       #19 0x56447e26eca8 <unknown>\nE       #20 0x56447e26ee36 <unknown>\nE       #21 0x56447e28a333 <unknown>\nE       #22 0x7f21446a4b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670770200395,"stop":1670770201607,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"negative_data_case","time":{"start":1670770201608,"stop":1670770201608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670770207529,"stop":1670770207592,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User sends incorrect data"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_form_from_main_page"},{"name":"subSuite","value":"TestMainPageForm"},{"name":"host","value":"fv-az367-28"},{"name":"thread","value":"2979-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_form_from_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"negative_data_case","value":"['test_user', 'test@fojin.tech', '12345678901', '     ']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e73c42b8dc14d911","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 9857)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x563a00e162a3 <unknown>\n#1 0x563a00bd4f77 <unknown>\n#2 0x563a00c180a9 <unknown>\n#3 0x563a00c1618d <unknown>\n#4 0x563a00c13d88 <unknown>\n#5 0x563a00c12f2d <unknown>\n#6 0x563a00c06dc5 <unknown>\n#7 0x563a00c31b32 <unknown>\n#8 0x563a00c0661f <unknown>\n#9 0x563a00c31cfe <unknown>\n#10 0x563a00c4947c <unknown>\n#11 0x563a00c31903 <unknown>\n#12 0x563a00c04ece <unknown>\n#13 0x563a00c05fde <unknown>\n#14 0x563a00e6663e <unknown>\n#15 0x563a00e69b79 <unknown>\n#16 0x563a00e4c89e <unknown>\n#17 0x563a00e6aa83 <unknown>\n#18 0x563a00e3f505 <unknown>\n#19 0x563a00e8bca8 <unknown>\n#20 0x563a00e8be36 <unknown>\n#21 0x563a00ea7333 <unknown>\n#22 0x7f7131104b43 <unknown>","time":{"start":1670770194496,"stop":1670770200288,"duration":5792}},{"uid":"ccb058c2df281d54","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 9490)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5652ea9122a3 <unknown>\n#1 0x5652ea6d0f77 <unknown>\n#2 0x5652ea7140a9 <unknown>\n#3 0x5652ea71218d <unknown>\n#4 0x5652ea70fd88 <unknown>\n#5 0x5652ea70ef2d <unknown>\n#6 0x5652ea702dc5 <unknown>\n#7 0x5652ea72db32 <unknown>\n#8 0x5652ea70261f <unknown>\n#9 0x5652ea72dcfe <unknown>\n#10 0x5652ea74547c <unknown>\n#11 0x5652ea72d903 <unknown>\n#12 0x5652ea700ece <unknown>\n#13 0x5652ea701fde <unknown>\n#14 0x5652ea96263e <unknown>\n#15 0x5652ea965b79 <unknown>\n#16 0x5652ea94889e <unknown>\n#17 0x5652ea966a83 <unknown>\n#18 0x5652ea93b505 <unknown>\n#19 0x5652ea987ca8 <unknown>\n#20 0x5652ea987e36 <unknown>\n#21 0x5652ea9a3333 <unknown>\n#22 0x7fd402245b43 <unknown>","time":{"start":1670770187360,"stop":1670770193164,"duration":5804}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":2,"unknown":0,"total":5},"items":[{"uid":"4192c83ccb6fd7a6","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/4192c83ccb6fd7a6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 9935)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55dc5fe582a3 <unknown>\n#1 0x55dc5fc16f77 <unknown>\n#2 0x55dc5fc5a0a9 <unknown>\n#3 0x55dc5fc5818d <unknown>\n#4 0x55dc5fc55d88 <unknown>\n#5 0x55dc5fc54f2d <unknown>\n#6 0x55dc5fc48dc5 <unknown>\n#7 0x55dc5fc73b32 <unknown>\n#8 0x55dc5fc4861f <unknown>\n#9 0x55dc5fc73cfe <unknown>\n#10 0x55dc5fc8b47c <unknown>\n#11 0x55dc5fc73903 <unknown>\n#12 0x55dc5fc46ece <unknown>\n#13 0x55dc5fc47fde <unknown>\n#14 0x55dc5fea863e <unknown>\n#15 0x55dc5feabb79 <unknown>\n#16 0x55dc5fe8e89e <unknown>\n#17 0x55dc5feaca83 <unknown>\n#18 0x55dc5fe81505 <unknown>\n#19 0x55dc5fecdca8 <unknown>\n#20 0x55dc5fecde36 <unknown>\n#21 0x55dc5fee9333 <unknown>\n#22 0x7f0957f0eb43 <unknown>","time":{"start":1670706905005,"stop":1670706909612,"duration":4607}},{"uid":"ca15b826738a413f","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/ca15b826738a413f","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"name\"]\"}\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5624ff7392a3 <unknown>\n#1 0x5624ff4f7f77 <unknown>\n#2 0x5624ff53480c <unknown>\n#3 0x5624ff534a71 <unknown>\n#4 0x5624ff56e734 <unknown>\n#5 0x5624ff554b5d <unknown>\n#6 0x5624ff56c47c <unknown>\n#7 0x5624ff554903 <unknown>\n#8 0x5624ff527ece <unknown>\n#9 0x5624ff528fde <unknown>\n#10 0x5624ff78963e <unknown>\n#11 0x5624ff78cb79 <unknown>\n#12 0x5624ff76f89e <unknown>\n#13 0x5624ff78da83 <unknown>\n#14 0x5624ff762505 <unknown>\n#15 0x5624ff7aeca8 <unknown>\n#16 0x5624ff7aee36 <unknown>\n#17 0x5624ff7ca333 <unknown>\n#18 0x7f9518f10b43 <unknown>","time":{"start":1670704020658,"stop":1670704020990,"duration":332}},{"uid":"eedb599d29027817","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/eedb599d29027817","status":"passed","time":{"start":1670702022763,"stop":1670702026404,"duration":3641}},{"uid":"c6c57400b3b8528b","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/c6c57400b3b8528b","status":"passed","time":{"start":1670701872451,"stop":1670701876090,"duration":3639}}]},"tags":[]},"source":"583be2f291ca30c6.json","parameterValues":["'chrome'","['test_user', 'test@fojin.tech', '12345678901', '     ']"]}
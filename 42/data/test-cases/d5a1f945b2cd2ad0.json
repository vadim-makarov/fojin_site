{"uid":"d5a1f945b2cd2ad0","name":"test_case_page[chrome-3-locator2]","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"e6f231b977f278ad48aa435ec4cd6b0a","time":{"start":1670770029111,"stop":1670770032792,"duration":3681},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2539)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55d3da2512a3 <unknown>\n#1 0x55d3da00ff77 <unknown>\n#2 0x55d3da0530a9 <unknown>\n#3 0x55d3da05118d <unknown>\n#4 0x55d3da04ed88 <unknown>\n#5 0x55d3da04df2d <unknown>\n#6 0x55d3da041dc5 <unknown>\n#7 0x55d3da06cb32 <unknown>\n#8 0x55d3da04161f <unknown>\n#9 0x55d3da06ccfe <unknown>\n#10 0x55d3da08447c <unknown>\n#11 0x55d3da06c903 <unknown>\n#12 0x55d3da03fece <unknown>\n#13 0x55d3da040fde <unknown>\n#14 0x55d3da2a163e <unknown>\n#15 0x55d3da2a4b79 <unknown>\n#16 0x55d3da28789e <unknown>\n#17 0x55d3da2a5a83 <unknown>\n#18 0x55d3da27a505 <unknown>\n#19 0x55d3da2c6ca8 <unknown>\n#20 0x55d3da2c6e36 <unknown>\n#21 0x55d3da2e2333 <unknown>\n#22 0x7f45d40b2b43 <unknown>","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f9b7d9f7410>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1e679c648a3fb04f3dab1bbf781fca5f\")>\ncase = '3'\nlocator = ('css selector', '.case-container-3 > div:nth-child(1) > div:nth-child(1)')\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n>       page.scroll_to_and_click_element(locator)\n\nui_tests/test_cases_page.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9b7c757750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d3da2c6e36 \\\\u003Cunknown>\\\\n#21 0x55d3da2e2333 \\\\u003Cunknown>\\\\n#22 0x7f45d40b2b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2539)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x55d3da2512a3 <unknown>\nE       #1 0x55d3da00ff77 <unknown>\nE       #2 0x55d3da0530a9 <unknown>\nE       #3 0x55d3da05118d <unknown>\nE       #4 0x55d3da04ed88 <unknown>\nE       #5 0x55d3da04df2d <unknown>\nE       #6 0x55d3da041dc5 <unknown>\nE       #7 0x55d3da06cb32 <unknown>\nE       #8 0x55d3da04161f <unknown>\nE       #9 0x55d3da06ccfe <unknown>\nE       #10 0x55d3da08447c <unknown>\nE       #11 0x55d3da06c903 <unknown>\nE       #12 0x55d3da03fece <unknown>\nE       #13 0x55d3da040fde <unknown>\nE       #14 0x55d3da2a163e <unknown>\nE       #15 0x55d3da2a4b79 <unknown>\nE       #16 0x55d3da28789e <unknown>\nE       #17 0x55d3da2a5a83 <unknown>\nE       #18 0x55d3da27a505 <unknown>\nE       #19 0x55d3da2c6ca8 <unknown>\nE       #20 0x55d3da2c6e36 <unknown>\nE       #21 0x55d3da2e2333 <unknown>\nE       #22 0x7f45d40b2b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670770027961,"stop":1670770029110,"duration":1149},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670770032857,"stop":1670770032915,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az367-28"},{"name":"thread","value":"2979-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'3'"},{"name":"locator","value":"('css selector', '.case-container-3 > div:nth-child(1) > div:nth-child(1)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"ee69f1827fd94ce6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2537)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x56282d6172a3 <unknown>\n#1 0x56282d3d5f77 <unknown>\n#2 0x56282d4190a9 <unknown>\n#3 0x56282d41718d <unknown>\n#4 0x56282d414d88 <unknown>\n#5 0x56282d413f2d <unknown>\n#6 0x56282d407dc5 <unknown>\n#7 0x56282d432b32 <unknown>\n#8 0x56282d40761f <unknown>\n#9 0x56282d432cfe <unknown>\n#10 0x56282d44a47c <unknown>\n#11 0x56282d432903 <unknown>\n#12 0x56282d405ece <unknown>\n#13 0x56282d406fde <unknown>\n#14 0x56282d66763e <unknown>\n#15 0x56282d66ab79 <unknown>\n#16 0x56282d64d89e <unknown>\n#17 0x56282d66ba83 <unknown>\n#18 0x56282d640505 <unknown>\n#19 0x56282d68cca8 <unknown>\n#20 0x56282d68ce36 <unknown>\n#21 0x56282d6a8333 <unknown>\n#22 0x7f3723d9db43 <unknown>","time":{"start":1670770024622,"stop":1670770027854,"duration":3232}},{"uid":"e0fb837e5b092d15","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2516)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x564ed4d6f2a3 <unknown>\n#1 0x564ed4b2df77 <unknown>\n#2 0x564ed4b710a9 <unknown>\n#3 0x564ed4b6f18d <unknown>\n#4 0x564ed4b6cd88 <unknown>\n#5 0x564ed4b6bf2d <unknown>\n#6 0x564ed4b5fdc5 <unknown>\n#7 0x564ed4b8ab32 <unknown>\n#8 0x564ed4b5f61f <unknown>\n#9 0x564ed4b8acfe <unknown>\n#10 0x564ed4ba247c <unknown>\n#11 0x564ed4b8a903 <unknown>\n#12 0x564ed4b5dece <unknown>\n#13 0x564ed4b5efde <unknown>\n#14 0x564ed4dbf63e <unknown>\n#15 0x564ed4dc2b79 <unknown>\n#16 0x564ed4da589e <unknown>\n#17 0x564ed4dc3a83 <unknown>\n#18 0x564ed4d98505 <unknown>\n#19 0x564ed4de4ca8 <unknown>\n#20 0x564ed4de4e36 <unknown>\n#21 0x564ed4e00333 <unknown>\n#22 0x7ff69458cb43 <unknown>","time":{"start":1670770019676,"stop":1670770023316,"duration":3640}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":3,"passed":0,"unknown":0,"total":5},"items":[{"uid":"7d7eec1de88f93d5","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/7d7eec1de88f93d5","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2539)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x561bcc0b02a3 <unknown>\n#1 0x561bcbe6ef77 <unknown>\n#2 0x561bcbeb20a9 <unknown>\n#3 0x561bcbeb018d <unknown>\n#4 0x561bcbeadd88 <unknown>\n#5 0x561bcbeacf2d <unknown>\n#6 0x561bcbea0dc5 <unknown>\n#7 0x561bcbecbb32 <unknown>\n#8 0x561bcbea061f <unknown>\n#9 0x561bcbecbcfe <unknown>\n#10 0x561bcbee347c <unknown>\n#11 0x561bcbecb903 <unknown>\n#12 0x561bcbe9eece <unknown>\n#13 0x561bcbe9ffde <unknown>\n#14 0x561bcc10063e <unknown>\n#15 0x561bcc103b79 <unknown>\n#16 0x561bcc0e689e <unknown>\n#17 0x561bcc104a83 <unknown>\n#18 0x561bcc0d9505 <unknown>\n#19 0x561bcc125ca8 <unknown>\n#20 0x561bcc125e36 <unknown>\n#21 0x561bcc141333 <unknown>\n#22 0x7fb4620dbb43 <unknown>","time":{"start":1670706664482,"stop":1670706666828,"duration":2346}},{"uid":"2d13d3988c3b958f","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/2d13d3988c3b958f","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 2529)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55f55267d2a3 <unknown>\n#1 0x55f55243bf77 <unknown>\n#2 0x55f55247f0a9 <unknown>\n#3 0x55f55247d18d <unknown>\n#4 0x55f55247ad88 <unknown>\n#5 0x55f552479f2d <unknown>\n#6 0x55f55246ddc5 <unknown>\n#7 0x55f552498b32 <unknown>\n#8 0x55f55246d61f <unknown>\n#9 0x55f552498cfe <unknown>\n#10 0x55f5524b047c <unknown>\n#11 0x55f552498903 <unknown>\n#12 0x55f55246bece <unknown>\n#13 0x55f55246cfde <unknown>\n#14 0x55f5526cd63e <unknown>\n#15 0x55f5526d0b79 <unknown>\n#16 0x55f5526b389e <unknown>\n#17 0x55f5526d1a83 <unknown>\n#18 0x55f5526a6505 <unknown>\n#19 0x55f5526f2ca8 <unknown>\n#20 0x55f5526f2e36 <unknown>\n#21 0x55f55270e333 <unknown>\n#22 0x7ff3e9a05b43 <unknown>","time":{"start":1670703938305,"stop":1670703940943,"duration":2638}},{"uid":"da2418388308e0b4","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/da2418388308e0b4","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701904643,"stop":1670701912108,"duration":7465}},{"uid":"80c77a359daf373e","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/80c77a359daf373e","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701755529,"stop":1670701762803,"duration":7274}}]},"tags":[]},"source":"d5a1f945b2cd2ad0.json","parameterValues":["'chrome'","'3'","('css selector', '.case-container-3 > div:nth-child(1) > div:nth-child(1)')"]}
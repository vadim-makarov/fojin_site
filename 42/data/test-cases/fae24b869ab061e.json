{"uid":"fae24b869ab061e","name":"test_case_page[chrome-5-locator4]","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"82107c7577c622fb2dc00d54cc23549b","time":{"start":1670770057943,"stop":1670770061727,"duration":3784},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4359)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5555bc0622a3 <unknown>\n#1 0x5555bbe20f77 <unknown>\n#2 0x5555bbe640a9 <unknown>\n#3 0x5555bbe6218d <unknown>\n#4 0x5555bbe5fd88 <unknown>\n#5 0x5555bbe5ef2d <unknown>\n#6 0x5555bbe52dc5 <unknown>\n#7 0x5555bbe7db32 <unknown>\n#8 0x5555bbe5261f <unknown>\n#9 0x5555bbe7dcfe <unknown>\n#10 0x5555bbe9547c <unknown>\n#11 0x5555bbe7d903 <unknown>\n#12 0x5555bbe50ece <unknown>\n#13 0x5555bbe51fde <unknown>\n#14 0x5555bc0b263e <unknown>\n#15 0x5555bc0b5b79 <unknown>\n#16 0x5555bc09889e <unknown>\n#17 0x5555bc0b6a83 <unknown>\n#18 0x5555bc08b505 <unknown>\n#19 0x5555bc0d7ca8 <unknown>\n#20 0x5555bc0d7e36 <unknown>\n#21 0x5555bc0f3333 <unknown>\n#22 0x7fd750cc5b43 <unknown>","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f9b7d9f7990>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4a45a7ed4c9316903fc4def17f9d23ec\")>\ncase = '5'\nlocator = ('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n>       page.scroll_to_and_click_element(locator)\n\nui_tests/test_cases_page.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9b7c6b3250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5555bc0d7e36 \\\\u003Cunknown>\\\\n#21 0x5555bc0f3333 \\\\u003Cunknown>\\\\n#22 0x7fd750cc5b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4359)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x5555bc0622a3 <unknown>\nE       #1 0x5555bbe20f77 <unknown>\nE       #2 0x5555bbe640a9 <unknown>\nE       #3 0x5555bbe6218d <unknown>\nE       #4 0x5555bbe5fd88 <unknown>\nE       #5 0x5555bbe5ef2d <unknown>\nE       #6 0x5555bbe52dc5 <unknown>\nE       #7 0x5555bbe7db32 <unknown>\nE       #8 0x5555bbe5261f <unknown>\nE       #9 0x5555bbe7dcfe <unknown>\nE       #10 0x5555bbe9547c <unknown>\nE       #11 0x5555bbe7d903 <unknown>\nE       #12 0x5555bbe50ece <unknown>\nE       #13 0x5555bbe51fde <unknown>\nE       #14 0x5555bc0b263e <unknown>\nE       #15 0x5555bc0b5b79 <unknown>\nE       #16 0x5555bc09889e <unknown>\nE       #17 0x5555bc0b6a83 <unknown>\nE       #18 0x5555bc08b505 <unknown>\nE       #19 0x5555bc0d7ca8 <unknown>\nE       #20 0x5555bc0d7e36 <unknown>\nE       #21 0x5555bc0f3333 <unknown>\nE       #22 0x7fd750cc5b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670770056786,"stop":1670770057942,"duration":1156},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670770061774,"stop":1670770062833,"duration":1059},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az367-28"},{"name":"thread","value":"2979-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'5'"},{"name":"locator","value":"('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"90ce7750cee1ef7f","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4384)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x556e5faf62a3 <unknown>\n#1 0x556e5f8b4f77 <unknown>\n#2 0x556e5f8f80a9 <unknown>\n#3 0x556e5f8f618d <unknown>\n#4 0x556e5f8f3d88 <unknown>\n#5 0x556e5f8f2f2d <unknown>\n#6 0x556e5f8e6dc5 <unknown>\n#7 0x556e5f911b32 <unknown>\n#8 0x556e5f8e661f <unknown>\n#9 0x556e5f911cfe <unknown>\n#10 0x556e5f92947c <unknown>\n#11 0x556e5f911903 <unknown>\n#12 0x556e5f8e4ece <unknown>\n#13 0x556e5f8e5fde <unknown>\n#14 0x556e5fb4663e <unknown>\n#15 0x556e5fb49b79 <unknown>\n#16 0x556e5fb2c89e <unknown>\n#17 0x556e5fb4aa83 <unknown>\n#18 0x556e5fb1f505 <unknown>\n#19 0x556e5fb6bca8 <unknown>\n#20 0x556e5fb6be36 <unknown>\n#21 0x556e5fb87333 <unknown>\n#22 0x7f4998fe9b43 <unknown>","time":{"start":1670770052875,"stop":1670770056671,"duration":3796}},{"uid":"8383c7c6a7476fd2","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4382)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55d4e46312a3 <unknown>\n#1 0x55d4e43eff77 <unknown>\n#2 0x55d4e44330a9 <unknown>\n#3 0x55d4e443118d <unknown>\n#4 0x55d4e442ed88 <unknown>\n#5 0x55d4e442df2d <unknown>\n#6 0x55d4e4421dc5 <unknown>\n#7 0x55d4e444cb32 <unknown>\n#8 0x55d4e442161f <unknown>\n#9 0x55d4e444ccfe <unknown>\n#10 0x55d4e446447c <unknown>\n#11 0x55d4e444c903 <unknown>\n#12 0x55d4e441fece <unknown>\n#13 0x55d4e4420fde <unknown>\n#14 0x55d4e468163e <unknown>\n#15 0x55d4e4684b79 <unknown>\n#16 0x55d4e466789e <unknown>\n#17 0x55d4e4685a83 <unknown>\n#18 0x55d4e465a505 <unknown>\n#19 0x55d4e46a6ca8 <unknown>\n#20 0x55d4e46a6e36 <unknown>\n#21 0x55d4e46c2333 <unknown>\n#22 0x7f82933e2b43 <unknown>","time":{"start":1670770048192,"stop":1670770051777,"duration":3585}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":3,"passed":0,"unknown":0,"total":5},"items":[{"uid":"57664bef31962415","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/57664bef31962415","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4384)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5570424462a3 <unknown>\n#1 0x557042204f77 <unknown>\n#2 0x5570422480a9 <unknown>\n#3 0x55704224618d <unknown>\n#4 0x557042243d88 <unknown>\n#5 0x557042242f2d <unknown>\n#6 0x557042236dc5 <unknown>\n#7 0x557042261b32 <unknown>\n#8 0x55704223661f <unknown>\n#9 0x557042261cfe <unknown>\n#10 0x55704227947c <unknown>\n#11 0x557042261903 <unknown>\n#12 0x557042234ece <unknown>\n#13 0x557042235fde <unknown>\n#14 0x55704249663e <unknown>\n#15 0x557042499b79 <unknown>\n#16 0x55704247c89e <unknown>\n#17 0x55704249aa83 <unknown>\n#18 0x55704246f505 <unknown>\n#19 0x5570424bbca8 <unknown>\n#20 0x5570424bbe36 <unknown>\n#21 0x5570424d7333 <unknown>\n#22 0x7f41614b1b43 <unknown>","time":{"start":1670706708152,"stop":1670706710746,"duration":2594}},{"uid":"9b0a4477fc555e3f","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/9b0a4477fc555e3f","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 4383)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x557a691522a3 <unknown>\n#1 0x557a68f10f77 <unknown>\n#2 0x557a68f540a9 <unknown>\n#3 0x557a68f5218d <unknown>\n#4 0x557a68f4fd88 <unknown>\n#5 0x557a68f4ef2d <unknown>\n#6 0x557a68f42dc5 <unknown>\n#7 0x557a68f6db32 <unknown>\n#8 0x557a68f4261f <unknown>\n#9 0x557a68f6dcfe <unknown>\n#10 0x557a68f8547c <unknown>\n#11 0x557a68f6d903 <unknown>\n#12 0x557a68f40ece <unknown>\n#13 0x557a68f41fde <unknown>\n#14 0x557a691a263e <unknown>\n#15 0x557a691a5b79 <unknown>\n#16 0x557a6918889e <unknown>\n#17 0x557a691a6a83 <unknown>\n#18 0x557a6917b505 <unknown>\n#19 0x557a691c7ca8 <unknown>\n#20 0x557a691c7e36 <unknown>\n#21 0x557a691e3333 <unknown>\n#22 0x7fb5452aab43 <unknown>","time":{"start":1670703945320,"stop":1670703947781,"duration":2461}},{"uid":"fde5dc585874e23","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/fde5dc585874e23","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701921452,"stop":1670701928695,"duration":7243}},{"uid":"29ed56fd7f6b9a01","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/29ed56fd7f6b9a01","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701772013,"stop":1670701779354,"duration":7341}}]},"tags":[]},"source":"fae24b869ab061e.json","parameterValues":["'chrome'","'5'","('css selector', '.case-container-5 > div:nth-child(2) > div:nth-child(1)')"]}
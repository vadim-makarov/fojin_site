{"uid":"c3389fadacc71c4b","name":"test_case_page[chrome-9-locator8]","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"7463d6bbfb657945f0904ed35e6ff192","time":{"start":1670770030243,"stop":1670770033572,"duration":3329},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7576)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x5593a87c32a3 <unknown>\n#1 0x5593a8581f77 <unknown>\n#2 0x5593a85c50a9 <unknown>\n#3 0x5593a85c318d <unknown>\n#4 0x5593a85c0d88 <unknown>\n#5 0x5593a85bff2d <unknown>\n#6 0x5593a85b3dc5 <unknown>\n#7 0x5593a85deb32 <unknown>\n#8 0x5593a85b361f <unknown>\n#9 0x5593a85decfe <unknown>\n#10 0x5593a85f647c <unknown>\n#11 0x5593a85de903 <unknown>\n#12 0x5593a85b1ece <unknown>\n#13 0x5593a85b2fde <unknown>\n#14 0x5593a881363e <unknown>\n#15 0x5593a8816b79 <unknown>\n#16 0x5593a87f989e <unknown>\n#17 0x5593a8817a83 <unknown>\n#18 0x5593a87ec505 <unknown>\n#19 0x5593a8838ca8 <unknown>\n#20 0x5593a8838e36 <unknown>\n#21 0x5593a8854333 <unknown>\n#22 0x7f32dc173b43 <unknown>","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7f6c6b59b750>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"41a3f91b931dbf43da4045dbc6bdb7e5\")>\ncase = '9'\nlocator = ('css selector', '.case-container-9 > div:nth-child(1) > div:nth-child(1)')\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n>       page.scroll_to_and_click_element(locator)\n\nui_tests/test_cases_page.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nui_tests/pages/main_page.py:38: in scroll_to_and_click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6c6a319810>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5593a8838e36 \\\\u003Cunknown>\\\\n#21 0x5593a8854333 \\\\u003Cunknown>\\\\n#22 0x7f32dc173b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7576)\nE         (Session info: headless chrome=108.0.5359.94)\nE       Stacktrace:\nE       #0 0x5593a87c32a3 <unknown>\nE       #1 0x5593a8581f77 <unknown>\nE       #2 0x5593a85c50a9 <unknown>\nE       #3 0x5593a85c318d <unknown>\nE       #4 0x5593a85c0d88 <unknown>\nE       #5 0x5593a85bff2d <unknown>\nE       #6 0x5593a85b3dc5 <unknown>\nE       #7 0x5593a85deb32 <unknown>\nE       #8 0x5593a85b361f <unknown>\nE       #9 0x5593a85decfe <unknown>\nE       #10 0x5593a85f647c <unknown>\nE       #11 0x5593a85de903 <unknown>\nE       #12 0x5593a85b1ece <unknown>\nE       #13 0x5593a85b2fde <unknown>\nE       #14 0x5593a881363e <unknown>\nE       #15 0x5593a8816b79 <unknown>\nE       #16 0x5593a87f989e <unknown>\nE       #17 0x5593a8817a83 <unknown>\nE       #18 0x5593a87ec505 <unknown>\nE       #19 0x5593a8838ca8 <unknown>\nE       #20 0x5593a8838e36 <unknown>\nE       #21 0x5593a8854333 <unknown>\nE       #22 0x7f32dc173b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1670770029262,"stop":1670770030243,"duration":981},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670770033604,"stop":1670770033661,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az367-28"},{"name":"thread","value":"2982-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"case","value":"'9'"},{"name":"locator","value":"('css selector', '.case-container-9 > div:nth-child(1) > div:nth-child(1)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"e4b5f8fc302880f6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7459)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55e89d40b2a3 <unknown>\n#1 0x55e89d1c9f77 <unknown>\n#2 0x55e89d20d0a9 <unknown>\n#3 0x55e89d20b18d <unknown>\n#4 0x55e89d208d88 <unknown>\n#5 0x55e89d207f2d <unknown>\n#6 0x55e89d1fbdc5 <unknown>\n#7 0x55e89d226b32 <unknown>\n#8 0x55e89d1fb61f <unknown>\n#9 0x55e89d226cfe <unknown>\n#10 0x55e89d23e47c <unknown>\n#11 0x55e89d226903 <unknown>\n#12 0x55e89d1f9ece <unknown>\n#13 0x55e89d1fafde <unknown>\n#14 0x55e89d45b63e <unknown>\n#15 0x55e89d45eb79 <unknown>\n#16 0x55e89d44189e <unknown>\n#17 0x55e89d45fa83 <unknown>\n#18 0x55e89d434505 <unknown>\n#19 0x55e89d480ca8 <unknown>\n#20 0x55e89d480e36 <unknown>\n#21 0x55e89d49c333 <unknown>\n#22 0x7f2d50059b43 <unknown>","time":{"start":1670770025459,"stop":1670770029167,"duration":3708}},{"uid":"8dc02b3fdbb33b08","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7592)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55dfcc5112a3 <unknown>\n#1 0x55dfcc2cff77 <unknown>\n#2 0x55dfcc3130a9 <unknown>\n#3 0x55dfcc31118d <unknown>\n#4 0x55dfcc30ed88 <unknown>\n#5 0x55dfcc30df2d <unknown>\n#6 0x55dfcc301dc5 <unknown>\n#7 0x55dfcc32cb32 <unknown>\n#8 0x55dfcc30161f <unknown>\n#9 0x55dfcc32ccfe <unknown>\n#10 0x55dfcc34447c <unknown>\n#11 0x55dfcc32c903 <unknown>\n#12 0x55dfcc2ffece <unknown>\n#13 0x55dfcc300fde <unknown>\n#14 0x55dfcc56163e <unknown>\n#15 0x55dfcc564b79 <unknown>\n#16 0x55dfcc54789e <unknown>\n#17 0x55dfcc565a83 <unknown>\n#18 0x55dfcc53a505 <unknown>\n#19 0x55dfcc586ca8 <unknown>\n#20 0x55dfcc586e36 <unknown>\n#21 0x55dfcc5a2333 <unknown>\n#22 0x7fdf6799ab43 <unknown>","time":{"start":1670770020308,"stop":1670770024304,"duration":3996}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":3,"passed":0,"unknown":0,"total":5},"items":[{"uid":"11a2aab7e2fc6d74","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/11a2aab7e2fc6d74","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7584)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55a76a3622a3 <unknown>\n#1 0x55a76a120f77 <unknown>\n#2 0x55a76a1640a9 <unknown>\n#3 0x55a76a16218d <unknown>\n#4 0x55a76a15fd88 <unknown>\n#5 0x55a76a15ef2d <unknown>\n#6 0x55a76a152dc5 <unknown>\n#7 0x55a76a17db32 <unknown>\n#8 0x55a76a15261f <unknown>\n#9 0x55a76a17dcfe <unknown>\n#10 0x55a76a19547c <unknown>\n#11 0x55a76a17d903 <unknown>\n#12 0x55a76a150ece <unknown>\n#13 0x55a76a151fde <unknown>\n#14 0x55a76a3b263e <unknown>\n#15 0x55a76a3b5b79 <unknown>\n#16 0x55a76a39889e <unknown>\n#17 0x55a76a3b6a83 <unknown>\n#18 0x55a76a38b505 <unknown>\n#19 0x55a76a3d7ca8 <unknown>\n#20 0x55a76a3d7e36 <unknown>\n#21 0x55a76a3f3333 <unknown>\n#22 0x7f832d771b43 <unknown>","time":{"start":1670706657319,"stop":1670706660145,"duration":2826}},{"uid":"503114fa33641580","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/503114fa33641580","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (400, 7592)\n  (Session info: headless chrome=108.0.5359.94)\nStacktrace:\n#0 0x55ea5f2fe2a3 <unknown>\n#1 0x55ea5f0bcf77 <unknown>\n#2 0x55ea5f1000a9 <unknown>\n#3 0x55ea5f0fe18d <unknown>\n#4 0x55ea5f0fbd88 <unknown>\n#5 0x55ea5f0faf2d <unknown>\n#6 0x55ea5f0eedc5 <unknown>\n#7 0x55ea5f119b32 <unknown>\n#8 0x55ea5f0ee61f <unknown>\n#9 0x55ea5f119cfe <unknown>\n#10 0x55ea5f13147c <unknown>\n#11 0x55ea5f119903 <unknown>\n#12 0x55ea5f0ecece <unknown>\n#13 0x55ea5f0edfde <unknown>\n#14 0x55ea5f34e63e <unknown>\n#15 0x55ea5f351b79 <unknown>\n#16 0x55ea5f33489e <unknown>\n#17 0x55ea5f352a83 <unknown>\n#18 0x55ea5f327505 <unknown>\n#19 0x55ea5f373ca8 <unknown>\n#20 0x55ea5f373e36 <unknown>\n#21 0x55ea5f38f333 <unknown>\n#22 0x7f72baaa9b43 <unknown>","time":{"start":1670703937162,"stop":1670703939618,"duration":2456}},{"uid":"54e8b5996b30da27","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/54e8b5996b30da27","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701912668,"stop":1670701919929,"duration":7261}},{"uid":"47e423fd42a3e184","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/47e423fd42a3e184","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701763151,"stop":1670701770543,"duration":7392}}]},"tags":[]},"source":"c3389fadacc71c4b.json","parameterValues":["'chrome'","'9'","('css selector', '.case-container-9 > div:nth-child(1) > div:nth-child(1)')"]}
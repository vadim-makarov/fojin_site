{"uid":"d927514978364648","name":"User can see the 1 case","fullName":"ui_tests.test_cases_page.TestCasesPage#test_case_page","historyId":"9bca6a077f4c65f54a967d59d5a81bf8","time":{"start":1671022369294,"stop":1671022377495,"duration":8201},"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","descriptionHtml":"<pre><code>    test checks availability of each case page(doesn't check content!)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fce8aad3d50>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"240336c6-21b8-4438-a7d2-dc25890f3e7d\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fce8a988d50>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1671022355378,"stop":1671022369293,"duration":13915},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        test checks availability of each case page(doesn't check content!)\n        ","status":"failed","statusMessage":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","statusTrace":"self = <ui_tests.test_cases_page.TestCasesPage object at 0x7fce8aad3d50>\nbrowser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"240336c6-21b8-4438-a7d2-dc25890f3e7d\")>\ncase = '1', locator = ('css selector', '.case-container-1 > div:nth-child(2)')\n\n    @allure.title('User can see the {case} case')\n    @severity(severity_level.NORMAL)\n    @allure.feature('User can see all the cases')\n    @pytest.mark.parametrize('case, locator', list(zip(CasesData.cases_list, CasesData.locators)))\n    def test_case_page(self, browser, case: str, locator: tuple):\n        \"\"\"\n        test checks availability of each case page(doesn't check content!)\n        \"\"\"\n        page = CasesPage(browser, self.url)\n        page.open()\n        page.expl_wait_for_page_download('cases')\n        page.scroll_to_and_click_element(locator)\n        page.expl_wait_for_page_download(case)\n>       page.should_be_some_page(case)\n\nui_tests/test_cases_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui_tests.pages.cases_page.CasesPage object at 0x7fce8a988d50>\npage_name = '1'\n\n    def should_be_some_page(self, page_name: str):\n>       assert page_name in self.browser.current_url, self.browser.current_url\nE       AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases\n\nui_tests/pages/main_page.py:39: AssertionError","steps":[],"attachments":[{"uid":"a64e0016c4717fce","name":"stderr","source":"a64e0016c4717fce.txt","type":"text/plain","size":370}],"parameters":[],"attachmentsCount":1,"stepsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1671022377532,"stop":1671022378394,"duration":862},"status":"passed","steps":[],"attachments":[{"uid":"24bfe08a65a90a90","name":"Screenshot test_case_page[firefox-1-locator0]","source":"24bfe08a65a90a90.png","type":"image/png","size":94323}],"parameters":[],"attachmentsCount":1,"stepsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"User can see all the cases"},{"name":"parentSuite","value":"ui_tests"},{"name":"suite","value":"test_cases_page"},{"name":"subSuite","value":"TestCasesPage"},{"name":"host","value":"fv-az443-57"},{"name":"thread","value":"2997-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ui_tests.test_cases_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"case","value":"'1'"},{"name":"locator","value":"('css selector', '.case-container-1 > div:nth-child(2)')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":2,"passed":3,"unknown":0,"total":13},"items":[{"uid":"413823508c51f191","reportUrl":"https://vadim-makarov.github.io/fojin_site/50//#testresult/413823508c51f191","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1671016701998,"stop":1671016710338,"duration":8340}},{"uid":"a1d1c87ec9b85ce3","reportUrl":"https://vadim-makarov.github.io/fojin_site/47//#testresult/a1d1c87ec9b85ce3","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670850220858,"stop":1670850228561,"duration":7703}},{"uid":"d9372780fb8f696f","reportUrl":"https://vadim-makarov.github.io/fojin_site/47//#testresult/d9372780fb8f696f","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670791301774,"stop":1670791309455,"duration":7681}},{"uid":"31baab6af030905","reportUrl":"https://vadim-makarov.github.io/fojin_site/46//#testresult/31baab6af030905","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670788646114,"stop":1670788653784,"duration":7670}},{"uid":"957a5d7c9d82e00b","reportUrl":"https://vadim-makarov.github.io/fojin_site/45//#testresult/957a5d7c9d82e00b","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670787898656,"stop":1670787906790,"duration":8134}},{"uid":"ada3f8d063f47779","reportUrl":"https://vadim-makarov.github.io/fojin_site/44//#testresult/ada3f8d063f47779","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670786704757,"stop":1670786711128,"duration":6371}},{"uid":"679802946027da9d","reportUrl":"https://vadim-makarov.github.io/fojin_site/43//#testresult/679802946027da9d","status":"failed","statusDetails":"AssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670772009468,"stop":1670772018664,"duration":9196}},{"uid":"1dfeed058ef5990e","reportUrl":"https://vadim-makarov.github.io/fojin_site/42//#testresult/1dfeed058ef5990e","status":"passed","time":{"start":1670770047292,"stop":1670770051056,"duration":3764}},{"uid":"e30f2bc7578b7b32","reportUrl":"https://vadim-makarov.github.io/fojin_site/41//#testresult/e30f2bc7578b7b32","status":"passed","time":{"start":1670706679133,"stop":1670706681332,"duration":2199}},{"uid":"5a8118385b25fa6a","reportUrl":"https://vadim-makarov.github.io/fojin_site/40//#testresult/5a8118385b25fa6a","status":"passed","statusDetails":"XPASS the test fails in a window mode","time":{"start":1670703959151,"stop":1670703961787,"duration":2636}},{"uid":"66d9e153499ef028","reportUrl":"https://vadim-makarov.github.io/fojin_site/39//#testresult/66d9e153499ef028","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701931197,"stop":1670701938802,"duration":7605}},{"uid":"12f92ba21bd1ee64","reportUrl":"https://vadim-makarov.github.io/fojin_site/37//#testresult/12f92ba21bd1ee64","status":"skipped","statusDetails":"XFAIL the test fails in a window mode\n\nAssertionError: https://test_user:hellofojin@dev.fojin.tech/ru/cases","time":{"start":1670701781867,"stop":1670701789414,"duration":7547}}]},"tags":[]},"source":"d927514978364648.json","parameterValues":["'firefox'","'1'","('css selector', '.case-container-1 > div:nth-child(2)')"]}